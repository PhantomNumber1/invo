import { c as create_ssr_component, b as add_attribute } from "../../../chunks/ssr.js";
import "../../../chunks/index.js";
const css = {
  code: 'html, body{height:100%;margin:0}main.svelte-2hzcd{height:100%;width:100%;display:flex;align-items:center;justify-content:center}.container.svelte-2hzcd{position:relative;width:100%;height:100%}.background.svelte-2hzcd{position:absolute;top:0;left:0;width:100%;height:100%;background-image:url("login-factory.jpg");background-size:cover;background-position:center;background-repeat:no-repeat;filter:blur(4px) brightness(70%);z-index:-1}.box.svelte-2hzcd{padding:20px;border-radius:10px;max-width:400px;width:100%;margin:10% auto;text-align:center;background-color:rgba(255, 255, 255, 0.8);z-index:1;position:relative}',
  map: `{"version":3,"file":"+page.svelte","sources":["+page.svelte"],"sourcesContent":["<script>\\r\\n\\timport { text } from \\"@sveltejs/kit\\";\\r\\n\\r\\n    /**\\r\\n\\t * @type {string | any[] }\\r\\n\\t */\\r\\n    let items = [];\\r\\n    let OTP=\\"\\";\\r\\n    let username = \\"\\";\\r\\n    let password = \\"\\";\\r\\n    let repeatpassword = \\"\\";\\r\\n    let email = \\"\\";\\r\\n    let message = \\"\\";\\r\\n\\r\\n    const sendOTP = async () => {\\r\\n        if (password === repeatpassword) {\\r\\n            const response = await fetch('https://30c1-122-172-81-83.ngrok-free.app/api/sendOTP', {\\r\\n                method: 'POST',\\r\\n                headers: {\\r\\n                    'Content-Type': 'application/json'\\r\\n                },\\r\\n                body: JSON.stringify({email, username})\\r\\n            });\\r\\n\\r\\n            const data = await response.json();\\r\\n            \\r\\n            if (response.ok) {\\r\\n                message = 'OTP Generated successfully!';\\r\\n                alert(data.message);\\r\\n            } else {\\r\\n                message = data.error || 'OTP Generation Failed, Check email';\\r\\n                alert(data.message);\\r\\n            }\\r\\n        } else {\\r\\n            message = \\"Passwords do not match\\";\\r\\n            alert(message);\\r\\n        }\\r\\n    };\\r\\n\\r\\n    const signUp = async () => {\\r\\n        if (password === repeatpassword) {\\r\\n            const response = await fetch('http://localhost:5000/api/register', {\\r\\n                method: 'POST',\\r\\n                headers: {\\r\\n                    'Content-Type': 'application/json'\\r\\n                },\\r\\n                body: JSON.stringify({ username, email, password, OTP })\\r\\n            });\\r\\n\\r\\n            const data = await response.json();\\r\\n            \\r\\n            if (response.ok) {\\r\\n                message = 'User registered successfully!';\\r\\n            } else {\\r\\n                message = data.error || 'Registration failed';\\r\\n                alert(\\"Wrong OTP\\");\\r\\n            }\\r\\n        } else {\\r\\n            message = \\"Passwords do not match\\";\\r\\n            alert(message);\\r\\n        }\\r\\n    };\\r\\n<\/script>\\r\\n\\r\\n<main>\\r\\n    <div class=\\"container\\">\\r\\n        <div class=\\"background\\"></div>\\r\\n        <div class=\\"box\\">\\r\\n            <p>Please enter the credentials.</p>\\r\\n            <form on:submit|preventDefault={signUp}>\\r\\n                <input type=\\"text\\" placeholder=\\"Username\\" bind:value={username} required />\\r\\n                <input type=\\"email\\" placeholder=\\"Email\\" bind:value={email} required />\\r\\n                <input type=\\"password\\" placeholder=\\"Password\\" bind:value={password} required />\\r\\n                <input type=\\"password\\" placeholder=\\"Repeat Password\\" bind:value={repeatpassword} required />\\r\\n                <input type=\\"text\\" placeholder=\\"OTP\\" bind:value={OTP} required>\\r\\n                <br>\\r\\n                <button type=\\"button\\" on:click={sendOTP}>Send OTP</button>\\r\\n                <button type=\\"submit\\">Submit</button>\\r\\n            </form>\\r\\n        </div>\\r\\n    </div>\\r\\n</main>\\r\\n\\r\\n<style>\\r\\n    :global(html, body) {\\r\\n        height: 100%;\\r\\n        margin: 0;\\r\\n    }\\r\\n\\r\\n    main {\\r\\n        height: 100%;\\r\\n        width: 100%;\\r\\n        display: flex;\\r\\n        align-items: center;\\r\\n        justify-content: center;\\r\\n    }\\r\\n\\r\\n    .container {\\r\\n        position: relative;\\r\\n        width: 100%;\\r\\n        height: 100%;\\r\\n    }\\r\\n\\r\\n    .background {\\r\\n        position: absolute;\\r\\n        top: 0;\\r\\n        left: 0;\\r\\n        width: 100%;\\r\\n        height: 100%;\\r\\n        background-image: url(\\"login-factory.jpg\\");\\r\\n        background-size: cover;\\r\\n        background-position: center;\\r\\n        background-repeat: no-repeat;\\r\\n        filter: blur(4px) brightness(70%);\\r\\n        z-index: -1;\\r\\n    }\\r\\n\\r\\n    .box {\\r\\n        padding: 20px;\\r\\n        border-radius: 10px;\\r\\n        max-width: 400px;\\r\\n        width: 100%;\\r\\n        margin: 10% auto;\\r\\n        text-align: center;\\r\\n        background-color: rgba(255, 255, 255, 0.8);\\r\\n        z-index: 1;\\r\\n        position: relative;\\r\\n    }\\r\\n</style>\\r\\n"],"names":[],"mappings":"AAoFY,UAAY,CAChB,MAAM,CAAE,IAAI,CACZ,MAAM,CAAE,CACZ,CAEA,iBAAK,CACD,MAAM,CAAE,IAAI,CACZ,KAAK,CAAE,IAAI,CACX,OAAO,CAAE,IAAI,CACb,WAAW,CAAE,MAAM,CACnB,eAAe,CAAE,MACrB,CAEA,uBAAW,CACP,QAAQ,CAAE,QAAQ,CAClB,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IACZ,CAEA,wBAAY,CACR,QAAQ,CAAE,QAAQ,CAClB,GAAG,CAAE,CAAC,CACN,IAAI,CAAE,CAAC,CACP,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,gBAAgB,CAAE,wBAAwB,CAC1C,eAAe,CAAE,KAAK,CACtB,mBAAmB,CAAE,MAAM,CAC3B,iBAAiB,CAAE,SAAS,CAC5B,MAAM,CAAE,KAAK,GAAG,CAAC,CAAC,WAAW,GAAG,CAAC,CACjC,OAAO,CAAE,EACb,CAEA,iBAAK,CACD,OAAO,CAAE,IAAI,CACb,aAAa,CAAE,IAAI,CACnB,SAAS,CAAE,KAAK,CAChB,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,GAAG,CAAC,IAAI,CAChB,UAAU,CAAE,MAAM,CAClB,gBAAgB,CAAE,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAC1C,OAAO,CAAE,CAAC,CACV,QAAQ,CAAE,QACd"}`
};
const Page = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let OTP = "";
  let username = "";
  let password = "";
  let repeatpassword = "";
  let email = "";
  $$result.css.add(css);
  return `<main class="svelte-2hzcd"><div class="container svelte-2hzcd"><div class="background svelte-2hzcd"></div> <div class="box svelte-2hzcd"><p data-svelte-h="svelte-qatj49">Please enter the credentials.</p> <form><input type="text" placeholder="Username" required${add_attribute("value", username, 0)}> <input type="email" placeholder="Email" required${add_attribute("value", email, 0)}> <input type="password" placeholder="Password" required${add_attribute("value", password, 0)}> <input type="password" placeholder="Repeat Password" required${add_attribute("value", repeatpassword, 0)}> <input type="text" placeholder="OTP" required${add_attribute("value", OTP, 0)}> <br> <button type="button" data-svelte-h="svelte-1nmjx6v">Send OTP</button> <button type="submit" data-svelte-h="svelte-1ou7dtz">Submit</button></form></div></div> </main>`;
});
export {
  Page as default
};
